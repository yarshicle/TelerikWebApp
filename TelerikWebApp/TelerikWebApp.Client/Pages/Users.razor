@page "/users"
@using TelerikWebApp.Client.Models
@using TelerikWebApp.Client.Services
@inject UserService UserService
@rendermode InteractiveAuto

<PageTitle>Users</PageTitle>

<h1>Users Management</h1>

<TelerikGrid Data="@GridViewModels"
			 Pageable="true"
			 PageSize="20"
			 Sortable="true"
			 FilterMode="GridFilterMode.FilterMenu"
			 Height="600px"
			 Class="compact-grid">
	<GridSettings>
		<GridPagerSettings InputType="PagerInputType.Input" />
	</GridSettings>
	<GridColumns>
		<GridColumn Field="@nameof(UserViewModel.Id)" Width="80px" Title="ID" />
		<GridColumn Field="@nameof(UserViewModel.FirstName)" Width="150px" Title="First Name" />
		<GridColumn Field="@nameof(UserViewModel.LastName)" Width="150px" Title="Last Name" />
		<GridColumn Field="@nameof(UserViewModel.Email)" Width="250px" Title="Email" />
		<GridColumn Field="@nameof(UserViewModel.Department)" Width="180px" Title="Department" FilterMenuType="@FilterMenuType.CheckBoxList" />
		<GridColumn Field="@nameof(UserViewModel.Position)" Width="200px" Title="Position" FilterMenuType="@FilterMenuType.CheckBoxList" />
		<GridColumn Field="@nameof(UserViewModel.Salary)" Width="120px" Title="Salary" DisplayFormat="{0:C0}" />
		<GridColumn Field="@nameof(UserViewModel.StatusText)" Width="100px" Title="Active" FilterMenuType="@FilterMenuType.CheckBoxList">
			<Template>
				@{
					var user = (UserViewModel)context;
				}
				<span class="status-badge @(user.IsActive ? "status-active" : "status-inactive")">
					@user.StatusText
				</span>
			</Template>
		</GridColumn>
	</GridColumns>
</TelerikGrid>

<style>
	.compact-grid {
		--kendo-grid-header-padding-y: 4px;
		--kendo-grid-cell-padding-y: 4px;
		--kendo-grid-font-size: 12px;
		font-size: 12px;
	}

		/* Compact header styling */
		.compact-grid .k-grid-header .k-header {
			font-weight: 600;
			background-color: var(--kendo-color-primary-subtle);
			padding: 4px 8px !important;
			line-height: 1.2;
		}

		/* Compact cell styling */
		.compact-grid .k-grid-table td {
			border-color: var(--kendo-color-border-alt);
			padding: 4px 8px !important;
			line-height: 1.3;
		}

		/* Compact filter row styling */
		.compact-grid .k-filter-row td {
			padding: 2px 4px !important;
			vertical-align: middle;
		}

		.compact-grid .k-filter-row .k-textbox,
		.compact-grid .k-filter-row .k-dropdownlist,
		.compact-grid .k-filter-row .k-numerictextbox {
			height: 28px !important;
			font-size: 11px !important;
			padding: 2px 6px !important;
		}

		.compact-grid .k-filter-row .k-button {
			height: 26px !important;
			width: 26px !important;
			min-width: 26px !important;
			padding: 2px !important;
			font-size: 11px !important;
		}

		.compact-grid .k-filter-row .k-icon {
			font-size: 12px !important;
		}

		/* Compact pager styling */
		.compact-grid .k-pager {
			padding: 6px 8px !important;
			font-size: 11px !important;
		}

			.compact-grid .k-pager .k-button {
				height: 24px !important;
				min-width: 24px !important;
				padding: 2px 6px !important;
				font-size: 11px !important;
			}

	.status-badge {
		display: inline-block;
		padding: 2px 8px;
		border-radius: 12px;
		font-size: 11px;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		min-width: 60px;
		text-align: center;
	}

	.status-active {
		background-color: #d4edda;
		color: #155724;
		border: 1px solid #c3e6cb;
	}

	.status-inactive {
		background-color: #f8d7da;
		color: #721c24;
		border: 1px solid #f5c6cb;
	}
</style>

@code {
	private List<TelerikWebApp.Client.Models.User> GridData = new();
	private List<UserViewModel> GridViewModels = new();

	protected override async Task OnInitializedAsync()
	{
		GridData = await UserService.GetUsersAsync();
		GridViewModels = GridData.Select(u => new UserViewModel
		{
			Id = u.Id,
			FirstName = u.FirstName,
			LastName = u.LastName,
			Email = u.Email,
			Department = u.Department,
			Position = u.Position,
			Salary = u.Salary,
			IsActive = u.IsActive,
			StatusText = u.IsActive ? "Active" : "Inactive"
		}).ToList();
	}

	public class UserViewModel
	{
		public int Id { get; set; }
		public string FirstName { get; set; } = "";
		public string LastName { get; set; } = "";
		public string Email { get; set; } = "";
		public string Department { get; set; } = "";
		public string Position { get; set; } = "";
		public decimal Salary { get; set; }
		public bool IsActive { get; set; }
		public string StatusText { get; set; } = "";
	}
}